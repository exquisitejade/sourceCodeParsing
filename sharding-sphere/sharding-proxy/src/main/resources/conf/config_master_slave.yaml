##################      ##################
# Here you can configure the rules for the proxy.
#
# We provide two kinds of configurations for example. This one is the configuration of Master slave rule,
# If you only want to use master-slave, please refer to this one, and if you want to use Sharding,
# please refer to the config.yaml.
#
##################      ##################


# The example of master-slave rule.

#dataSources:
#  ds_0:
#    url: jdbc:mysql://127.0.0.1:3306/ds_0?serverTimezone=UTC&useSSL=false
#    username: root
#    password:
#    autoCommit: true
#    connectionTimeout: 30000
#    idleTimeout: 60000
#    maxLifetime: 1800000
#    maximumPoolSize: 65
#  ds_1:
#    url: jdbc:mysql://127.0.0.1:3306/ds_1?serverTimezone=UTC&useSSL=false
#    username: root
#    password:
#    autoCommit: true
#    connectionTimeout: 30000
#    idleTimeout: 60000
#    maxLifetime: 1800000
#    maximumPoolSize: 65
#masterSlaveRule:
#  name: ds_ms
#  masterDataSourceName: ds_0
#  slaveDataSourceNames:
#    - ds_1
#  props:
#    # MEMORY_STRICTLY: Proxy holds as many connections as the count of actual tables routed in a database.
#    #                  The benefit of this approach is saving memory for Proxy by Stream ResultSet.
#    # CONNECTION_STRICTLY: Proxy will release connections after get the overall rows from the ResultSet.
#    #                      Meanwhile, the cost of the memory will be increased.
#    connection.mode: MEMORY_STRICTLY
#    acceptor.size: 16  # The default value is available processors count * 2.
#    executor.size: 16  # Infinite by default.
#    sql.show: false

#orchestration:
#  name: orchestration_ds
#  type: SHARDING
#  overwrite: true
#  zookeeper:
#    namespace: orchestration
#    serverLists: localhost:2181

#proxyAuthority:
#  username: root
#  password: root
